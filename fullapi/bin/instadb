#!/bin/bash
# instadb

# Stop on errors
set -e

# Sanity check command line options
usage() {
  echo "Usage: $0 (create|destroy|reset|dump)"
}

if [ $# -ne 1 ]; then
  usage
  exit 1
fi

# Parse argument.  $1 is the first argument
case $1 in
  "create")
    if [ -f "var/dronebarcode.sqlite3" ]; then
      echo "Error: database already exists"
    else
      echo "+ mkdir -p var/uploads"
      mkdir -p var/uploads
      echo "+ sqlite3 var/dronebarcode.sqlite3 < sql/schema.sql"
      sqlite3 var/dronebarcode.sqlite3 < sql/schema.sql
      echo "+ sqlite3 var/dronebarcode.sqlite3 < sql/data.sql"
      sqlite3 var/dronebarcode.sqlite3 < sql/data.sql
    fi
    ;;

  "destroy")
    echo "+ rm -rf var/dronebarcode.sqlite3 var/uploads"
    rm -rf var/dronebarcode.sqlite3 var/uploads
    ;;

  "reset")
    echo "+ rm -rf var/dronebarcode.sqlite3 var/uploads"
    rm -rf var/dronebarcode.sqlite3 var/uploads
    echo "+ mkdir -p var/uploads"
    mkdir -p var/uploads
    echo "+ sqlite3 var/dronebarcode.sqlite3 < sql/schema.sql"
    sqlite3 var/dronebarcode.sqlite3 < sql/schema.sql
    echo "+ sqlite3 var/dronebarcode.sqlite3 < sql/data.sql"
    sqlite3 var/dronebarcode.sqlite3 < sql/data.sql
    ;;

  "dump")
    echo "+ sqlite3 -batch -line var/dronebarcode.sqlite3 'SELECT * FROM codes'"
    sqlite3 -batch -line var/dronebarcode.sqlite3 'SELECT * FROM codes'
    ;;

  *)
    usage
    exit 1
    ;;
esac
